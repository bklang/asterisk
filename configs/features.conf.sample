;
; Sample Call Features (parking, transfer, etc) configuration
;

[general]
parkext => 700			; What extension to dial to park
parkpos => 701-720		; What extensions to park calls on. These needs to be
				; numeric, as Asterisk starts from the start position
				; and increments with one for the next parked call.
context => parkedcalls		; Which context parked calls are in
;parkingtime => 45		; Number of seconds a call can be parked for 
				; (default is 45 seconds)
;courtesytone = beep		; Sound file to play to the parked caller 
				; when someone dials a parked call
				; or the Touch Monitor is activated/deactivated.
;parkedplay = caller		; Who to play the courtesy tone to when picking up a parked call
				; one of: parked, caller, both  (default is caller)
;adsipark = yes			; if you want ADSI parking announcements
;findslot => next		; Continue to the 'next' free parking space. 
				; Defaults to 'first' available
;parkedmusicclass=default	; This is the MOH class to use for the parked channel
				; as long as the class is not set on the channel directly
				; using Set(CHANNEL(musicclass)=whatever) in the dialplan

;transferdigittimeout => 3	; Number of seconds to wait between digits when transfering a call
				; (default is 3 seconds)
;xfersound = beep		; to indicate an attended transfer is complete
;xferfailsound = beeperr	; to indicate a failed transfer
;pickupexten = *8		; Configure the pickup extension. (default is *8)
;featuredigittimeout = 500	; Max time (ms) between digits for 
				; feature activation  (default is 500 ms)
;atxfernoanswertimeout = 15	; Timeout for answer on attended transfer default is 15 seconds.

[featuremap]
;blindxfer => #1		; Blind transfer  (default is #)
;disconnect => *0		; Disconnect  (default is *)
;automon => *1			; One Touch Record a.k.a. Touch Monitor
;atxfer => *2			; Attended transfer
;parkcall => #72                ; Park call (one step parking)

[applicationmap]
; Note that the DYNAMIC_FEATURES channel variable must be set to use the features
; defined here.  The value of DYNAMIC_FEATURES should be the names of the features
; to allow the channel to use separated by '#'.  For example:
;    Set(DYNAMIC_FEATURES=myfeature1#myfeature2#myfeature3)
;
;testfeature => #9,callee,Playback,tt-monkeys	;Play tt-monkeys to 
						;callee if #9 was pressed
;pauseMonitor   => #1,caller,Pausemonitor	;Pause monitoring on channel
;unpauseMonitor => #3,caller,UnPauseMonitor	;Unpause monitoring on channel
